------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # null_resource.stub will be created
  + resource "null_resource" "stub" {
      + id = (known after apply)
    }

  # module.test1.aws_eip.eip[0] will be created
  + resource "aws_eip" "eip" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name"       = "test1.us-west-2a"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
      + tags_all             = {
          + "Name"       = "test1.us-west-2a"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
      + vpc                  = (known after apply)
    }

  # module.test1.aws_internet_gateway.main[0] will be created
  + resource "aws_internet_gateway" "main" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
        }
      + tags_all = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
        }
      + vpc_id   = (known after apply)
    }

  # module.test1.aws_nat_gateway.ngw[0] will be created
  + resource "aws_nat_gateway" "ngw" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name"       = "test1.us-west-2a"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
      + tags_all             = {
          + "Name"       = "test1.us-west-2a"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
    }

  # module.test1.aws_route.private[0] will be created
  + resource "aws_route" "private" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # module.test1.aws_route.public[0] will be created
  + resource "aws_route" "public" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # module.test1.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name"       = "private"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
      + tags_all         = {
          + "Name"       = "private"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
      + vpc_id           = (known after apply)
    }

  # module.test1.aws_route_table.public will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name"       = "public"
          + "VPC"        = "test1"
          + "built-with" = "terraform"
          + "region"     = "all"
        }
      + tags_all         = {
          + "Name"       = "public"
          + "VPC"        = "test1"
          + "built-with" = "terraform"
          + "region"     = "all"
        }
      + vpc_id           = (known after apply)
    }

  # module.test1.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.test1.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.test1.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-west-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.36.10.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name"       = "private-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + tags_all                        = {
          + "Name"       = "private-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + vpc_id                          = (known after apply)
    }

  # module.test1.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-west-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.36.8.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name"       = "public-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + tags_all                        = {
          + "Name"       = "public-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + vpc_id                          = (known after apply)
    }

  # module.test1.aws_vpc.environment will be created
  + resource "aws_vpc" "environment" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.36.8.0/22"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = true
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
          + "vpc"        = "test1"
        }
      + tags_all                         = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
          + "vpc"        = "test1"
        }
    }

  # module.test2.aws_network_acl.private[0] will be created
  + resource "aws_network_acl" "private" {
      + arn        = (known after apply)
      + egress     = [
          + {
              + action          = "deny"
              + cidr_block      = "10.36.8.0/22"
              + from_port       = 80
              + icmp_code       = null
              + icmp_type       = null
              + ipv6_cidr_block = ""
              + protocol        = "tcp"
              + rule_no         = 100
              + to_port         = 8080
            },
        ]
      + id         = (known after apply)
      + ingress    = [
          + {
              + action          = "allow"
              + cidr_block      = "10.36.8.0/22"
              + from_port       = 443
              + icmp_code       = null
              + icmp_type       = null
              + ipv6_cidr_block = ""
              + protocol        = "tcp"
              + rule_no         = 100
              + to_port         = 443
            },
        ]
      + owner_id   = (known after apply)
      + subnet_ids = (known after apply)
      + tags       = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
        }
      + tags_all   = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
        }
      + vpc_id     = (known after apply)
    }

  # module.test2.aws_network_acl.public[0] will be created
  + resource "aws_network_acl" "public" {
      + arn        = (known after apply)
      + egress     = (known after apply)
      + id         = (known after apply)
      + ingress    = [
          + {
              + action          = "allow"
              + cidr_block      = "10.36.8.0/22"
              + from_port       = 8443
              + icmp_code       = null
              + icmp_type       = null
              + ipv6_cidr_block = ""
              + protocol        = "tcp"
              + rule_no         = 100
              + to_port         = 8443
            },
        ]
      + owner_id   = (known after apply)
      + subnet_ids = (known after apply)
      + tags       = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
        }
      + tags_all   = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
        }
      + vpc_id     = (known after apply)
    }

  # module.test2.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name"       = "private"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
      + tags_all         = {
          + "Name"       = "private"
          + "built-with" = "terraform"
          + "region"     = "us-west-2a"
          + "vpc"        = "test1"
        }
      + vpc_id           = (known after apply)
    }

  # module.test2.aws_route_table.private[1] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name"       = "private"
          + "built-with" = "terraform"
          + "region"     = "us-west-2b"
          + "vpc"        = "test1"
        }
      + tags_all         = {
          + "Name"       = "private"
          + "built-with" = "terraform"
          + "region"     = "us-west-2b"
          + "vpc"        = "test1"
        }
      + vpc_id           = (known after apply)
    }

  # module.test2.aws_route_table.public will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name"       = "public"
          + "VPC"        = "test1"
          + "built-with" = "terraform"
          + "region"     = "all"
        }
      + tags_all         = {
          + "Name"       = "public"
          + "VPC"        = "test1"
          + "built-with" = "terraform"
          + "region"     = "all"
        }
      + vpc_id           = (known after apply)
    }

  # module.test2.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.test2.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.test2.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.test2.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.test2.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-west-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.36.10.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name"       = "private-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + tags_all                        = {
          + "Name"       = "private-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + vpc_id                          = (known after apply)
    }

  # module.test2.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-west-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.36.11.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name"       = "private-1.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + tags_all                        = {
          + "Name"       = "private-1.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + vpc_id                          = (known after apply)
    }

  # module.test2.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-west-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.36.10.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name"       = "public-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + tags_all                        = {
          + "Name"       = "public-0.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + vpc_id                          = (known after apply)
    }

  # module.test2.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-west-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.36.11.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name"       = "public-1.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + tags_all                        = {
          + "Name"       = "public-1.test1"
          + "built-with" = "terraform"
          + "tag1"       = "value1"
        }
      + vpc_id                          = (known after apply)
    }

  # module.test2.aws_vpc.environment will be created
  + resource "aws_vpc" "environment" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.36.8.0/22"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = true
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
          + "vpc"        = "test1"
        }
      + tags_all                         = {
          + "Name"       = "test1"
          + "built-with" = "terraform"
          + "vpc"        = "test1"
        }
    }

  # module.test2.null_resource.generated_private_subnets[0] will be created
  + resource "null_resource" "generated_private_subnets" {
      + id       = (known after apply)
      + triggers = {
          + "cidr_block" = "10.36.10.0/24"
        }
    }

  # module.test2.null_resource.generated_private_subnets[1] will be created
  + resource "null_resource" "generated_private_subnets" {
      + id       = (known after apply)
      + triggers = {
          + "cidr_block" = "10.36.11.0/24"
        }
    }

  # module.test2.null_resource.generated_public_subnets[0] will be created
  + resource "null_resource" "generated_public_subnets" {
      + id       = (known after apply)
      + triggers = {
          + "cidr_block" = "10.36.8.0/24"
        }
    }

  # module.test2.null_resource.generated_public_subnets[1] will be created
  + resource "null_resource" "generated_public_subnets" {
      + id       = (known after apply)
      + triggers = {
          + "cidr_block" = "10.36.9.0/24"
        }
    }

Plan: 31 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

